{"version":3,"sources":["webpack:///src/app/modules/homy/homy-routing.module.ts","webpack:///src/app/modules/homy/homy.component.ts","webpack:///src/app/modules/homy/homy.component.html","webpack:///src/app/modules/homy/homy.module.ts","webpack:///src/app/services/country.service.ts"],"names":["routes","path","component","HomyRoutingModule","forChild","imports","exports","HomyComponent","dataService","countryService","loading","searchTerms","term","next","event","sendGetRequest","trainNo","subscribe","data","console","log","res","onKeydown","selector","templateUrl","styleUrls","HomyModule","declarations","CountryService","http","endpoint","url","trim","get","pipe","handleError","operation","result","error","message","providedIn"],"mappings":"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","file":"modules-homy-homy-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomyComponent } from './homy.component';\n\nconst routes: Routes = [{ path: '', component: HomyComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomyRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n  tap,\n  switchMap,\n  debounceTime,\n  distinctUntilChanged\n} from 'rxjs/operators';\n\n\nimport { CountryService } from 'src/app/services/country.service';\nimport { DataService } from 'src/app/services/data.service';\nimport { Country } from 'src/app/models/country';\nimport {Resp } from 'src/app/models/resp';\nimport { Employee } from 'src/app/models/employee';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './homy.component.html',\n  styleUrls: ['./homy.component.css']\n})\n\nexport class HomyComponent implements OnInit {\n  loading = false;\n // countries$: Observable<Country[]>;\n // res: Employee[];\n  res: Resp;\n  trainNo: string;\n  private searchTerms = new Subject<string>();\n\n  constructor(private dataService: DataService, private countryService: CountryService) { }\n\n  search(term: string) {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    /*this.dataService.sendGetRequest(this.trainNo).subscribe((data) => {\n      // tslint:disable-next-line: no-debugger\n      debugger;\n      console.log(data);\n      this.res = data;\n\n\n    });*/\n\n\n\n   /*  this.countries$ = this.searchTerms.pipe(\n      tap(_ => this.loading = true),\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.countryService.searchCountry(term)),\n      tap(_ => this.loading = false)\n    ); */\n  }\n\n  onKeydown(event: any) {\n   /* if (event.key === 'Enter') {\n      console.log(event);\n      */\n     this.dataService.sendGetRequest(this.trainNo).subscribe((data) => {\n      // tslint:disable-next-line: no-debugger\n      debugger;\n      console.log(data);\n      this.res = data;\n    });\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-sm-3\" style=\"background-color:lavender;\">\n      <div class=\"form-group\">\n        <label for=\"train_no\">Enter Train Number:</label>\n        <input type=\"text\" (keydown.enter)=\"onKeydown($event)\" class=\"form-control\" id=\"train_no\" name=\"train_no\" [(ngModel)]=\"trainNo\" placeholder=\"name\">\n        {{trainNo}}\n      </div>\n    </div>\n    <div class=\"col-sm-3\" style=\"background-color:lavenderblush;\"></div>\n    <div class=\"col-sm-3\" style=\"background-color:lavender;\"></div>\n    <div class=\"col-sm-3\" style=\"background-color:lavenderblush;\"></div>\n  </div>\n</div>\n\n\n\n<!--\n<div class=\"container\">\n  <form>\n    <div class=\"form-group search-bar\">\n\n      <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" #searchBox (input)=\"search(searchBox.value)\">\n\n\n      <div class=\"loader\" *ngIf=\"loading\">\n        <div class=\"c-three-dots-loader\"></div>\n      </div>\n    </div>\n\n\n    <div class=\"list-group\">\n      <div class=\"list-group-item list-group-item-action\" *ngFor=\"let country of countries$ | async\">\n        <div class=\"media\">\n          <img src=\"{{country.flag}}\" class=\"mr-2\" alt=\"...\">\n          <div class=\"media-body\">\n            <p class=\"mt-0\">{{ country.name }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n-->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomyRoutingModule } from './homy-routing.module';\nimport { HomyComponent } from './homy.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [HomyComponent],\n  imports: [\n    CommonModule,\n    HomyRoutingModule, FormsModule\n  ]\n})\nexport class HomyModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Country } from '../models/country';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryService {\n  endpoint = 'https://restcountries.eu/rest/v2/name/';\n\n  constructor(private http: HttpClient) { }\n\n  searchCountry(term: string): Observable<Country[]> {\n    // tslint:disable-next-line: no-debugger\n    debugger;\n    const url = `${this.endpoint}${term}`;\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get<Country[]>(url)\n      .pipe(\n        catchError(this.handleError<Country[]>('countries', []))\n      );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.log(`failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n}\n"]}