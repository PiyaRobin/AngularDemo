{"version":3,"sources":["./src/app/modules/homy/homy-routing.module.ts","./src/app/modules/homy/homy.component.ts","./src/app/modules/homy/homy.component.html","./src/app/modules/homy/homy.module.ts","./src/app/services/country.service.ts"],"names":[],"mappings":"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","file":"modules-homy-homy-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomyComponent } from './homy.component';\n\nconst routes: Routes = [{ path: '', component: HomyComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomyRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n  tap,\n  switchMap,\n  debounceTime,\n  distinctUntilChanged\n} from 'rxjs/operators';\n\n\nimport { CountryService } from 'src/app/services/country.service';\nimport { DataService } from 'src/app/services/data.service';\nimport { Country } from 'src/app/models/country';\nimport {Resp } from 'src/app/models/resp';\nimport { Employee } from 'src/app/models/employee';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './homy.component.html',\n  styleUrls: ['./homy.component.css']\n})\n\nexport class HomyComponent implements OnInit {\n  loading = false;\n // countries$: Observable<Country[]>;\n // res: Employee[];\n  res: Resp;\n  trainNo: string;\n  private searchTerms = new Subject<string>();\n\n  constructor(private dataService: DataService, private countryService: CountryService) { }\n\n  search(term: string) {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    /*this.dataService.sendGetRequest(this.trainNo).subscribe((data) => {\n      // tslint:disable-next-line: no-debugger\n      debugger;\n      console.log(data);\n      this.res = data;\n\n\n    });*/\n\n\n\n   /*  this.countries$ = this.searchTerms.pipe(\n      tap(_ => this.loading = true),\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.countryService.searchCountry(term)),\n      tap(_ => this.loading = false)\n    ); */\n  }\n\n  onKeydown(event: any) {\n   /* if (event.key === 'Enter') {\n      console.log(event);\n      */\n     this.dataService.sendGetRequest(this.trainNo).subscribe((data) => {\n      // tslint:disable-next-line: no-debugger\n      debugger;\n      console.log(data);\n      this.res = data;\n    });\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-sm-3\" style=\"background-color:lavender;\">\n      <div class=\"form-group\">\n        <label for=\"train_no\">Enter Train Number:</label>\n        <input type=\"text\" (keydown.enter)=\"onKeydown($event)\" class=\"form-control\" id=\"train_no\" name=\"train_no\" [(ngModel)]=\"trainNo\" placeholder=\"name\">\n        {{trainNo}}\n      </div>\n    </div>\n    <div class=\"col-sm-3\" style=\"background-color:lavenderblush;\"></div>\n    <div class=\"col-sm-3\" style=\"background-color:lavender;\"></div>\n    <div class=\"col-sm-3\" style=\"background-color:lavenderblush;\"></div>\n  </div>\n</div>\n\n\n\n<!--\n<div class=\"container\">\n  <form>\n    <div class=\"form-group search-bar\">\n\n      <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" #searchBox (input)=\"search(searchBox.value)\">\n\n\n      <div class=\"loader\" *ngIf=\"loading\">\n        <div class=\"c-three-dots-loader\"></div>\n      </div>\n    </div>\n\n\n    <div class=\"list-group\">\n      <div class=\"list-group-item list-group-item-action\" *ngFor=\"let country of countries$ | async\">\n        <div class=\"media\">\n          <img src=\"{{country.flag}}\" class=\"mr-2\" alt=\"...\">\n          <div class=\"media-body\">\n            <p class=\"mt-0\">{{ country.name }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n-->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomyRoutingModule } from './homy-routing.module';\nimport { HomyComponent } from './homy.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [HomyComponent],\n  imports: [\n    CommonModule,\n    HomyRoutingModule, FormsModule\n  ]\n})\nexport class HomyModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Country } from '../models/country';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryService {\n  endpoint = 'https://restcountries.eu/rest/v2/name/';\n\n  constructor(private http: HttpClient) { }\n\n  searchCountry(term: string): Observable<Country[]> {\n    // tslint:disable-next-line: no-debugger\n    debugger;\n    const url = `${this.endpoint}${term}`;\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get<Country[]>(url)\n      .pipe(\n        catchError(this.handleError<Country[]>('countries', []))\n      );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.log(`failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}